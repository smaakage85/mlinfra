name: Continuous Delivery

on:
  push:
    paths-ignore:
      - "**.md"
      - "**.MD"
      - ".gitignore"
    branches:
      - main

jobs:
  everything:
    name: Everything
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: actions/cache@v2
        id: cache-npm
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - uses: actions/cache@v2
        id: cache-pip
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
      - if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install
      - if: steps.cache-pip.outputs.cache-hit != 'true'
        run: pip install -r requirements.txt
      - run: |
          flake8 . --count --select=F7,F82
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_PIPELINES_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PIPELINES_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - run: |
          npx cdk deploy --ci --require-approval=never ml-init
      - run: |
          npx cdk deploy --ci --require-approval=never $(awk -F'\n' '! /ml-init/' <(npx cdk list))
          npx cdk synth
    